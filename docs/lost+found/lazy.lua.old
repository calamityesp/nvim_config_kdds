local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not (vim.uv or vim.loop).fs_stat(lazypath) then
  vim.fn.system({
    "git",
    "clone",
    "--filter=blob:none",
    "https://github.com/folke/lazy.nvim.git",
    "--branch=stable", -- latest stable release
    lazypath,
  })
end
vim.opt.rtp:prepend(lazypath)

require('lazy').setup({


-- ***********************************************************************************************
   -- ***Sleuth            -- Detect tabstop and shiftwidth automatically

-- ***********************************************************************************************
   'tpope/vim-sleuth',


-- ***********************************************************************************************
   -- ***Comment           -- "gc" to comment visual regions/lines
-- ***********************************************************************************************
   { 'numToStr/Comment.nvim', opts = {} },


-- ***********************************************************************************************
   -- Adds git related signs to the gutter, as well as utilities for managing changes
   -- See `:help gitsigns` to understand what the configuration keys do
-- ***********************************************************************************************
   {
      'lewis6991/gitsigns.nvim',
      opts = {
         signs = {
            add = { text = '+' },
            change = { text = '~' },
            delete = { text = '_' },
            topdelete = { text = 'â€¾' },
            changedelete = { text = '~' },
         },
      },
   },


-- ***********************************************************************************************
-- ***Which-Key     -- Shows pending Keybinds
-- ***********************************************************************************************
{
    'folke/which-key.nvim',
    event = 'VimEnter', -- Sets the loading event to 'VimEnter'
  },


-- ***********************************************************************************************
  -- ***Telescope    -- Allow better parsing, better syntax highlighting, etc
-- ***********************************************************************************************
  {
    'nvim-telescope/telescope.nvim',
    event = 'VimEnter',
    branch = '0.1.x',
    dependencies = {
      'nvim-lua/plenary.nvim',
      {
        'nvim-telescope/telescope-fzf-native.nvim',

        -- `build` is used to run some command when the plugin is installed/updated.
        -- This is only run then, not every time Neovim starts up.
        build = 'make',

        -- `cond` is a condition used to determine whether this plugin should be
        -- installed and loaded.
        cond = function()
          return vim.fn.executable 'make' == 1
        end,
      },
      { 'nvim-telescope/telescope-ui-select.nvim' },

      -- Useful for getting pretty icons, but requires a Nerd Font.
      { 'nvim-tree/nvim-web-devicons', enabled = vim.g.have_nerd_font },
    },

  },


-- ***********************************************************************************************
-- *** nvim-lsp config/plugins             -- Setting up LSP and plugins
--
-- ***********************************************************************************************
{
  'neovim/nvim-lspconfig',
  dependencies = {
    -- Automatically install LSPs and related tools to stdpath for Neovim
    'williamboman/mason.nvim',
    'williamboman/mason-lspconfig.nvim',
    'WhoIsSethDaniel/mason-tool-installer.nvim',

    -- Useful status updates for LSP.
    -- NOTE: `opts = {}` is the same as calling `require('fidget').setup({})`
    { 'j-hui/fidget.nvim', opts = {} },

    -- `neodev` configures Lua LSP for your Neovim config, runtime and plugins
    -- used for completion, annotations and signatures of Neovim apis
    { 'folke/neodev.nvim', opts = {} },
  }
},


-----------------------------Install themes and syntax highlighting --------------------------------------------
	{ 'Mofiqul/vscode.nvim', as = 'vscode-syn' },
	{ 'folke/tokyonight.nvim',as = 'tokyonight' },
	{ 'rose-pine/neovim', as = 'rose-pine' },

})
